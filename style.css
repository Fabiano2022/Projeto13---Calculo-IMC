* {
    margin: 0;
    padding: 0;
   box-sizing: border-box;
}

:root {
    font-size: 62.5%;

    /*cores*/
    --tt-heading: #0C3440;

    --tt-label: ##00453A;
    --tt-input: #212529;
    --ot-input:#02799D;
    --bd-input: rgba(73, 80, 87, 0.3);
    --tt-placeholder: rgba(73, 80, 87, 0.5);
    --bg-input: #DCE2E9;

    --tt-button: white;
    --bg-button: #02799D;
    
    --bg-error: #F03E3E;
    --tt-error: white;
}

body {
    background: #040924;
    font-family: 'Roboto', sans-serif;
}

body,input,button {
    font-size: 1.6rem;
    line-height: 2rem; 
}

.container {
    display: grid;
    height: 100vh;
    place-content: center;
}

.card {
    padding: 4.8rem 6.4rem 6.4rem;
    background: white;
    max-width: 42.8rem;
    margin-inline: auto;

    box-shadow: 0 .2rem .4rem rgba(0, 0, 0, 0.1);
    border-radius: 6px;
}

.title {
    font-size: 3.2rem;
    line-height: 4rem;    
    color: var(--tt-heading);       
}

form {
    width: 30rem;
}

form h1 {
    margin-bottom: 3.2rem;
}

form label {
    font-size: 1.4rem;
    line-height: 1.8rem;
    color: var(--tt-label);

    margin-bottom: .8rem; /* não vai funcionar o espaço, pois in line não aceita margin-bottom. Temos que mudar para block */
    display: block;
}

form input {
    width: 100%;
    border: 1px solid var(--bd-input);
    background: var(--bg-input);
    padding: 1.6rem;
    border-radius: .4rem;   
}

form input:focus {
    outline: 2px solid var(--ot-input)
}

form input::placeholder {
    color: var(--tt-placeholder);
}

.input-wrapper + .input-wrapper { /* lê-se - coloque um margin top antes do input wrapeer anterior ao input wrapper. irá aplicar margin-top apenas entre os inputs e não abaixo, pois ocasionaria erro.*/ 
    margin-top: 1.6rem;
}

form button {
    margin-top: 3.2rem;
    padding: 1.6rem;
    width: 100%;
    border-radius: .4rem;
    border: none;
    background: var(--bg-button);
    color: var(--tt-button);

    display: flex;
    align-items: center;
    justify-content: center;
    gap: .8rem;

    font-weight: bold;
    cursor: pointer; 

    transition: background .3s;
}

form button:hover {
    background:#165f75;
}

/* modal */

.modal-wrapper.open {
    opacity: 1;
    visibility: visible;
}

.modal-wrapper {
    position: absolute;
    inset: 0;                /*ao inves de colocar top: 0 / bottom: 0; / right: 0; left: 0; insiro inset 0*/
    background: rgba(0, 0, 0, 0.7); ;

    display: grid;
    place-content: center;

    opacity: 0;
    visibility: hidden;     
    
}

.modal {
    position: relative;     /*precisei criar para que o X fique relativo ao modal */
}

.modal button {
    background: none;
    border: none;

    position: absolute;     /*sse absoluto é relativo ao pai dele que foi criado anteriormente (position relative) 
                            top: 1.6rem;  se colocarmos 0 ele fica grudado na bora, por isso colocamos com o espaço, conforme o projeto 
                            right: 1.6rem;  se colocarmos 0 ele fica grudado na bora, por isso colocamos com o espaço, conforme o projeto */

    top: 1.6rem;
    right: 1.6rem;

    cursor: pointer;

    transition: .3s;    
} 

.modal button:hover {
    transform: scale(1.5);
}

/* alert error */

.alert.error.open {
    visibility: visible;
    opacity: 1;
    transform: translateY(0); /* faz com que o a caixa erro aparece de forma gradativa */
}

.alert.error {
    position: absolute;  
    background: var(--bg-error);
    top: 0;
    left: 0;
    right: 0;
    text-align: center;
    color: var(--tt-error) ;
    padding: .8rem 0; 
    font-weight: bold;     
    font-size: 16px;
    line-height: 20px;

    visibility: hidden;
    opacity: 0;
    transform: translateY(-30px); /* faz com que o a caixa erro aparece de forma gradativa */
    transition: .5s;    /* faz com que o a caixa erro aparece de forma gradativa */    
}


